# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import reservations_pb2 as reservations__pb2


class ReservationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.makeReservation = channel.unary_unary(
                '/Reservations/makeReservation',
                request_serializer=reservations__pb2.Reservation.SerializeToString,
                response_deserializer=reservations__pb2.ReservationResponse.FromString,
                )
        self.checkReservation = channel.unary_unary(
                '/Reservations/checkReservation',
                request_serializer=reservations__pb2.ReservationId.SerializeToString,
                response_deserializer=reservations__pb2.ReservationResponse.FromString,
                )
        self.cancelReservation = channel.unary_unary(
                '/Reservations/cancelReservation',
                request_serializer=reservations__pb2.ReservationId.SerializeToString,
                response_deserializer=reservations__pb2.CancelResponse.FromString,
                )
        self.listReservations = channel.unary_unary(
                '/Reservations/listReservations',
                request_serializer=reservations__pb2.ListRequest.SerializeToString,
                response_deserializer=reservations__pb2.ReservationsList.FromString,
                )


class ReservationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def makeReservation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkReservation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelReservation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listReservations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReservationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'makeReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.makeReservation,
                    request_deserializer=reservations__pb2.Reservation.FromString,
                    response_serializer=reservations__pb2.ReservationResponse.SerializeToString,
            ),
            'checkReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.checkReservation,
                    request_deserializer=reservations__pb2.ReservationId.FromString,
                    response_serializer=reservations__pb2.ReservationResponse.SerializeToString,
            ),
            'cancelReservation': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelReservation,
                    request_deserializer=reservations__pb2.ReservationId.FromString,
                    response_serializer=reservations__pb2.CancelResponse.SerializeToString,
            ),
            'listReservations': grpc.unary_unary_rpc_method_handler(
                    servicer.listReservations,
                    request_deserializer=reservations__pb2.ListRequest.FromString,
                    response_serializer=reservations__pb2.ReservationsList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Reservations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Reservations(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def makeReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reservations/makeReservation',
            reservations__pb2.Reservation.SerializeToString,
            reservations__pb2.ReservationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def checkReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reservations/checkReservation',
            reservations__pb2.ReservationId.SerializeToString,
            reservations__pb2.ReservationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cancelReservation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reservations/cancelReservation',
            reservations__pb2.ReservationId.SerializeToString,
            reservations__pb2.CancelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listReservations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reservations/listReservations',
            reservations__pb2.ListRequest.SerializeToString,
            reservations__pb2.ReservationsList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
